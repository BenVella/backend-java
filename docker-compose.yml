services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend-java-app
    ports:
      - "8080:8080" # Exposes the application on port 8080
    depends_on:
      rabbitmq:
        condition: service_healthy # takes a while to start
      keycloak:
        condition: service_started
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

  rabbitmq:
    image: rabbitmq:4.0
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # RabbitMQ communication port
      - "15672:15672" # RabbitMQ management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak-db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HTTP_PORT: 8442
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_STRICT: true
      KC_HTTP_RELATIVE_PATH: /
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      #KC_HOSTNAME_DEBUG: true
      #KC_LOG_LEVEL: DEBUG
    ports:
      - "8442:8442"
    expose:
        - "8442"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    depends_on:
      - postgres
    command:
      - start-dev
      - --import-realm

  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak-db
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
